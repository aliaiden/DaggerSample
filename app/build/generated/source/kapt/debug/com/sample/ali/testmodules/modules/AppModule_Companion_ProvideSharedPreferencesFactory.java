// Generated by Dagger (https://dagger.dev).
package com.sample.ali.testmodules.modules;

import android.content.Context;
import android.content.SharedPreferences;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_Companion_ProvideSharedPreferencesFactory implements Factory<SharedPreferences> {
  private final AppModule.Companion module;

  private final Provider<Context> contextProvider;

  public AppModule_Companion_ProvideSharedPreferencesFactory(AppModule.Companion module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public SharedPreferences get() {
    return provideSharedPreferences(module, contextProvider.get());
  }

  public static AppModule_Companion_ProvideSharedPreferencesFactory create(
      AppModule.Companion module, Provider<Context> contextProvider) {
    return new AppModule_Companion_ProvideSharedPreferencesFactory(module, contextProvider);
  }

  public static SharedPreferences provideSharedPreferences(AppModule.Companion instance,
      Context context) {
    return Preconditions.checkNotNull(instance.provideSharedPreferences(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
