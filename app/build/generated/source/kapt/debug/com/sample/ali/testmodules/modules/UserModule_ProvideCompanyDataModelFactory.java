// Generated by Dagger (https://dagger.dev).
package com.sample.ali.testmodules.modules;

import com.sample.ali.testmodules.datamodels.CompanyDataModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserModule_ProvideCompanyDataModelFactory implements Factory<CompanyDataModel> {
  private final UserModule module;

  public UserModule_ProvideCompanyDataModelFactory(UserModule module) {
    this.module = module;
  }

  @Override
  public CompanyDataModel get() {
    return provideCompanyDataModel(module);
  }

  public static UserModule_ProvideCompanyDataModelFactory create(UserModule module) {
    return new UserModule_ProvideCompanyDataModelFactory(module);
  }

  public static CompanyDataModel provideCompanyDataModel(UserModule instance) {
    return Preconditions.checkNotNull(instance.provideCompanyDataModel(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
